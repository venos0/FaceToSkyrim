

import tkinter as tk
from face_plugin_functions import change_brightness, generate_meshes
from tkinter import filedialog

LARGE_FONT= ("Verdana", 12)


class SeaofBTCapp(tk.Tk):

    def __init__(self, *args, **kwargs):
        
        tk.Tk.__init__(self, *args, **kwargs)
        #self.geometry('600x400')
        self.configure(width=600, height=400)
        self.title("Face to Skyrim plugin")
        
        
        container = tk.Frame(self)
        
        container.place(relwidth=1, relheight=1)
        #container.config(width=480,height=320)

        #container.pack(fill=None, expand = False)
        #container.pack_propagate(0)

        #container.grid_rowconfigure(0, weight=1)
        #container.grid_columnconfigure(0, weight=1)

        self.frames = {}

        for F in (StartPage, PageZero, PageOne, PageTwo, PageThree, PageFour):

            frame = F(container, self)

            self.frames[F] = frame

            #frame.grid(row=1, column=1, sticky="nsew")
            frame.place(relwidth=1, relheight=1)

        self.show_frame(StartPage)

    def show_frame(self, cont):

        frame = self.frames[cont]
        frame.tkraise()




class StartPage(tk.Frame):

    def __init__(self, parent, controller):
        tk.Frame.__init__(self,parent)
        
        #label = tk.Label(self, text="Start Page", font=LARGE_FONT)
        #label.pack(pady=10,padx=10)
        
        lbl = tk.Label(self, text="Face to Skyrim plugin", font=("Arial Bold", 20))
        lbl.place(x=170, y=10)
        #lbl.grid(column=1, row=0)

        lbl2 = tk.Label(self, text="Welcome", font=("Arial Bold", 14))
        lbl2.place(x=20, y=40)
        
        lbl3 = tk.Message(self, text="This plugin takes the faces generated by\
 facegen program (paid version) and translates into skyrim.\
 Aside of the generated mod made with this tool, you need to install\
 the base mod. Right now, this tool is very experimental and some characteristics\
 are not implemented yet. Feel free to collaborate in order to improve it.\
 Press next to continue.", font=("Arial Bold", 12), width=550)
        
        lbl3.place(x=20, y=80)
        
        
        
        lbl5 = tk.Label(self, text="Credits to Stephen999 for porting the head\
 into facegen", font=("Arial Bold", 11))
        lbl5.place(x=20, y=290)
        
        lbl6 = tk.Label(self, text="Credits to KouLeifoh for the head meshes from the mod:\
 High Poly Head 1.1", font=("Arial Bold", 11))
        lbl6.place(x=20, y=310)
        
        lbl4 = tk.Label(self, text="Program created by Venoso.\
 Any use of this utility will be under your responsibility.", font=("Arial Bold", 11))
        lbl4.place(x=20, y=330)
        
        #btn_exit.pack()
        
        btn_next = tk.Button(self, text="Next", \
                             command=lambda: controller.show_frame(PageZero))
        btn_next.place(x=270, y=360)
        #btn_next.pack()
        
    def quit(self):
       self.destroy()
        

class PageZero(tk.Frame):

    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        
        lbl2 = tk.Label(self, text="Before go: Generate face using facegen", font=("Arial Bold", 14))
        lbl2.place(x=20, y=40)
        
        lbl3 = tk.Message(self, text="Before all, generate a face with facegen.\
 You must setup facegen to use the model used by this utility. To do\
 this, follow these steps:", font=("Arial Bold", 12), width=550)
        lbl3.place(x=20, y=80)
        
        lbl4 = tk.Message(self, text="(1) Extract the files from FacegenModel.rar into facegen main\
 folder. In my case (facegen 3.1) is C:\Program Files (x86)\Singular Inversions\FaceGen Modeller 3.1 .\
 ", font=("Arial Bold", 12), width=550)
        lbl4.place(x=20, y=140)
        
        lbl5 = tk.Message(self, text="(2) Open facegen and change model to: Skirim\
 modelset 2020 Edition (male or female according to the case).", font=("Arial Bold", 12), width=550)
        lbl5.place(x=20, y=210)
        
        lbl6 = tk.Message(self, text="(3) Change modelparts. The only parts needed\
 are the head and the eyes.", font=("Arial Bold", 12), width=550)
        lbl6.place(x=20, y=260)
        
        lbl7 = tk.Message(self, text="(4) Generate your face and export to obj. You\
 must set the X rotation to 90 and scale to 1 (the rest in 0). Textures in JPEG.", font=("Arial Bold", 12), width=550)
        lbl7.place(x=20, y=290)
        
        btn_next = tk.Button(self, text="Next", \
                             command=lambda: controller.show_frame(PageOne))
        btn_next.place(x=270, y=360)


class PageOne(tk.Frame):

    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        
        
        
        f_path = ''
        def browse_button():
            # Allow user to select a directory and store it in global var
            # called folder_path

            nonlocal f_path
            
            filename = filedialog.askopenfilename(filetypes = (("Image files","*.jpg"),("img files","*.jpg")))

            f_path = filename
            entryText.set(f_path)
            
            print(f_path)
        
        
        def change_b (filenam,brillo):
            change_brightness(filenam,brillo)
            print(f_path)
        
        
        
        #lbl1 = Label(master=root,textvariable=folder_path)
        #lbl1.grid(row=0, column=1)
        
        lbl2 = tk.Label(self, text="Step one: Fix texture brightness", font=("Arial Bold", 14))
        lbl2.place(x=20, y=40)
        
        lbl3 = tk.Message(self, text="Fix the texture brightness, this step will\
 generate an image with reduced brightness. Please set the filepath of the file.\
 You can set a custom brightness value. From my experience, 5\
 is ok. The output file will appear as output_texture.jpg.", font=("Arial Bold", 12), width=550)
        lbl3.place(x=20, y=80)
        
        
        lbl2 = tk.Label(self, text="Brightness", font=("Arial Bold", 12))
        lbl2.place(x=170, y=165)
        
        var = tk.IntVar()
        var.set(5)
        spin = tk.Spinbox(self, from_=0, to=10, width=5, textvariable=var)
        spin.place(x=270, y=170)
        
        
        btn_next = tk.Button(self, text="Next", \
                             command=lambda: controller.show_frame(PageTwo))
        btn_next.place(x=270, y=360)
        
        #filenam = 'input.jpg'
        
        #fileI = filedialog.askopenfilename(filetypes = (("Image files","*.jpg"),("img files","*.jpg")))
        btn_folder = tk.Button(self, text="Texture jpg file", \
                             command= browse_button)
        btn_folder.place(x=370, y=267)
        
        entryText = tk.StringVar()
        dir_text = tk.Entry(self, width=50, state='disabled', textvariable=entryText)
        dir_text.place(x=50, y=270)
        
        
        btn_chan = tk.Button(self, text="Change Brightness", \
                             command=lambda: change_b(f_path, int(spin.get()) ))
        btn_chan.place(x=230, y=300)
        
        


class PageTwo(tk.Frame):

    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        
        lbl2 = tk.Label(self, text="Step Two: Transform texture to dds", font=("Arial Bold", 14))
        lbl2.place(x=20, y=40)
        
        lbl3 = tk.Message(self, text="Transform output_texture.jpg to dds format\
 with the name output_texture.dds . Unfortunately, you must do this step by yourself =/.\
 You can use the dds utility in gimp or photoshop, or even better: DDS Converter\
 (is free). You can find it in https://vvvv.org/contribution/dds-converter .\
 You will need the transformed file for the next step.", font=("Arial Bold", 12), width=550)
        lbl3.place(x=20, y=80)
        
        btn_next = tk.Button(self, text="Next", \
                             command=lambda: controller.show_frame(PageThree))
        btn_next.place(x=270, y=360)
        

class PageThree(tk.Frame):

    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        
        f_path = ''
        def browse_button():
            nonlocal f_path
            filename = filedialog.askopenfilename(filetypes = (("Texture files","*.dds"),("texture files","*.dds")))
            f_path = filename
            entryText.set(f_path)
            print(f_path)
        
        f_path_obj = ''
        def browse_button_obj():
            nonlocal f_path_obj
            filename = filedialog.askopenfilename(filetypes = (("OBJ files","*.obj"),("obj files","*.obj")))
            f_path_obj = filename
            entryText_obj.set(f_path_obj)
            print(f_path_obj)
        
        click_gender = False
        def clicked():
            nonlocal female
            nonlocal click_gender
            click_gender = True
            if selected.get() == 2:
                female = True
            else:
                female = False
            
        def generate_mod(f_obj,fem,f_tex):
            print(f_obj)
            print(f_tex)
            print(fem)
            if f_obj=='' or f_tex=='' or not click_gender:
                tk.messagebox.showinfo('Error', 'Set the files and gender!')
            else:
                generate_meshes(f_obj,fem,f_tex)
            
        
        lbl2 = tk.Label(self, text="Step Three: Convert obj to nif", font=("Arial Bold", 14))
        lbl2.place(x=20, y=40)
        
        lbl3 = tk.Message(self, text="Finally, transform .obj from facegen into\
 .nif files. Remember to rotate x=90 when exporting .obj from facegen. The program\
 might last a few minutes after pressing Transform.", font=("Arial Bold", 12), width=550)
        lbl3.place(x=20, y=80)
        
        lbl4 = tk.Label(self, text="Gender", font=("Arial Bold", 11))
        lbl4.place(x=200, y=160)
        
        selected = tk.IntVar()
        rad1 = tk.Radiobutton(self,text='Male', value=1, variable=selected, command=clicked)
        rad2 = tk.Radiobutton(self,text='Female', value=2, variable=selected, command=clicked)
        rad1.place(x=270, y=150)
        rad2.place(x=270, y=170)
        
        female = True
        
        btn_folder = tk.Button(self, text="Texture DDS file", \
                             command= browse_button)
        btn_folder.place(x=370, y=197)
        
        entryText = tk.StringVar()
        dir_text = tk.Entry(self, width=50, state='disabled', textvariable=entryText)
        dir_text.place(x=50, y=200)
        
        btn_folder_obj = tk.Button(self, text="Mesh .obj file", \
                             command= browse_button_obj)
        btn_folder_obj.place(x=370, y=247)
        
        entryText_obj = tk.StringVar()
        dir_text_obj = tk.Entry(self, width=50, state='disabled', textvariable=entryText_obj)
        dir_text_obj.place(x=50, y=250)
        
        
        btn_next = tk.Button(self, text="Generate", command=lambda: generate_mod(f_path_obj,female,f_path) )
        btn_next.place(x=250, y=300)

        btn_next = tk.Button(self, text="Next", \
                             command=lambda: controller.show_frame(PageFour))
        btn_next.place(x=270, y=360)

class PageFour(tk.Frame):

    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        
        lbl2 = tk.Label(self, text="Finished!", font=("Arial Bold", 14))
        lbl2.place(x=20, y=40)
        
        lbl3 = tk.Message(self, text="Now you can find in the folder of this\
 program FaceToSkyrimGenerated.zip that contais the mod. Install the mod using mod organizer\
 or extracting the .zip contents into skyrim folder. Remember to install the\
 base mod before run skyrim. You will find the generated face as a new race\
 the new race have the characteristics of nord race. Support to other races\
 maybe will be added in the future. Correct hair and expressions are not\
 supported yet. Feel free to collaborate, and if you want to modify this tool\
 feel free to do it (just ask permission to the authors in the credits).", font=("Arial Bold", 12), width=550)
        lbl3.place(x=20, y=80)



app = SeaofBTCapp()
app.mainloop()


